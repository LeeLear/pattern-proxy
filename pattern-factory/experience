一、工厂模式的使用：
1、在于如果存在大量的重复的new对象的时候，就会发生，如果要修该某个new出来的对象，这个时候是会发疯的，鬼知道你new在哪里，new了多少，
这个时候工程模式就起作用了，在new的过程，全部在同一个地方，一次修改即可。即使在两个维度的情况，可以使用抽象工厂模式，定义一个顶级工厂接口，
然后再实现这个接口的工厂类，如，abstractFactoryBuilder.build() 返回一个特定的factory，比如JavaCourseFactory，然后再调用
create()方法，返回默认的JavaCourse对象。
2、这个比较特殊，由于很多时候，我们会利用xml，或者json格式的数据来生成指定的类，我们会把类的信息全部写在数据里面，然后再
根据类里面定义的信息，一次性的build出一个类，然后再create出指定的类。
3、重载的方式，可以create出默认的类，也可以create出自己想要的类

二、工厂模式的三种分类
1、简单工厂，特点：一个工厂，生成多个单一产品。
2、工厂方法，特点:可以由一个总工厂生成不同的工厂，每个工厂生成一个有特色的产品
3、抽象工厂，特点:可以由一个总工厂生成不同的工厂，每个工厂再次生成多种有特色的产品